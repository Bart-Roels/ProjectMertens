using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.IO;

namespace ProjectMertens
{
    public class sleutel
    {
        public string badge { get; set; }
        public string datum { get; set; }

        public static sleutel operator == (sleutel a, sleutel b)
        {

        }   
    }

    public class waarde
    {
        public string start { get; set; }
        public string einde { get; set; }
    }
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

        private void button1_Click(object sender, RoutedEventArgs e)
        {
                // Create OpenFileDialog 
                Microsoft.Win32.OpenFileDialog dlg = new Microsoft.Win32.OpenFileDialog();

                // Set filter for file extension and default file extension 
                dlg.DefaultExt = ".csv";
                dlg.Filter = "CSV files (*.csv)|*.csv";

                // Display OpenFileDialog by calling ShowDialog method 
                Nullable<bool> result = dlg.ShowDialog();

                if (result == true)
                {
                    // Copy path
                    string path = dlg.InitialDirectory + dlg.FileName;
                    //Get csv to list
                    using(var reader = new StreamReader(path)){
                
                    var gegevens = new Dictionary<sleutel, waarde>();
             
                    //List<List<string>> dataList = new List<List<string>>();
                    //dataList.Add(new List<string>()); //badgenr lijst
                    //dataList.Add(new List<string>()); //datum lijst
                    //dataList.Add(new List<string>()); //beginuur lijst
                    //dataList.Add(new List<string>()); //einduur lijst
                    string headerLine = reader.ReadLine();
                    while (!reader.EndOfStream)
                    {
                        var line = reader.ReadLine();
                        var values = line.Split(';');

                        //hier moet de dict opgevuld worden V V


                        
                        //dataList[0].Add(values[0]);  //nr's based op de csv zn kolomnrs (badgenr)
                        //dataList[1].Add(values[2]); //datum
                        //dataList[2].Add(values[3]); //beginuur
                        //dataList[3].Add(values[4]); //einduur
                    }
                        foreach (List<string> o in dataList)
                        {
                           foreach (string k in o)
                            {
                            MessageBox.Show(k);
                            }
                        }
                    }      
                }


                


        }
   
    }
}

